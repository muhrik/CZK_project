\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Queue : A toy example}{1}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}first model}{1}{subsection.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}second model(using phase type fitting)}{1}{subsection.1.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces a queue}}{1}{figure.1.1}}
\newlabel{fig:queue0}{{1.1}{1}{a queue}{figure.1.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.2}{\ignorespaces D/M/1/n queue with capacity $n$. The Dirac-distributed arrival event does not reset when the exponential service event occurs.}}{2}{figure.1.2}}
\newlabel{fig:Queue1}{{1.2}{2}{D/M/1/n queue with capacity $n$. The Dirac-distributed arrival event does not reset when the exponential service event occurs}{figure.1.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{../Model/timeoutqueue.sm}{2}{lstlisting.-1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.3}{\ignorespaces PRISM GSMP model of a D/M/1/n queue as shown in \ref  {fig:Queue1}.}}{2}{figure.1.3}}
\newlabel{fig:queuecode1}{{1.3}{2}{PRISM GSMP model of a D/M/1/n queue as shown in \ref {fig:Queue1}}{figure.1.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.4}{\ignorespaces Queue with phase type fitting of parameter k.}}{2}{figure.1.4}}
\newlabel{fig:queueptf1}{{1.4}{2}{Queue with phase type fitting of parameter k}{figure.1.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.5}{\ignorespaces Queue with phase type fitting of parameter k.}}{3}{figure.1.5}}
\newlabel{fig:queueptf2}{{1.5}{3}{Queue with phase type fitting of parameter k}{figure.1.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.6}{\ignorespaces PRISM CTMC model of the D/M/1/n queue as shown in \ref  {fig:Queue1} with phase-type fitting to approximate the deterministic arrivals. The phase-type module \emph  {trigger} is used as suggested on the \href  {http://www.prismmodelchecker.org/manual/FrequentlyAskedQuestions/PRISMModelling}{PRISM website}. }}{4}{figure.1.6}}
\newlabel{fig:queuecode2}{{1.6}{4}{PRISM CTMC model of the D/M/1/n queue as shown in \ref {fig:Queue1} with phase-type fitting to approximate the deterministic arrivals. The phase-type module \emph {trigger} is used as suggested on the \href {http://www.prismmodelchecker.org/manual/FrequentlyAskedQuestions/PRISMModelling}{PRISM website}}{figure.1.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.7}{\ignorespaces The effect of $k$, the number of time points within the sequence of exponential transitions, on the shape of the resulting phase-type distribution. Increasing $k$ makes the phase-type distribution more deterministic. This picture was taken from the \href  {http://www.prismmodelchecker.org/manual/FrequentlyAskedQuestions/PRISMModelling}{PRISM website}.}}{4}{figure.1.7}}
\newlabel{fig:time1}{{1.7}{4}{The effect of $k$, the number of time points within the sequence of exponential transitions, on the shape of the resulting phase-type distribution. Increasing $k$ makes the phase-type distribution more deterministic. This picture was taken from the \href {http://www.prismmodelchecker.org/manual/FrequentlyAskedQuestions/PRISMModelling}{PRISM website}}{figure.1.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.8}{\ignorespaces The blue line is the result without phase type fitting.}}{5}{figure.1.8}}
\newlabel{fig:ssp_hybrid}{{1.8}{5}{The blue line is the result without phase type fitting}{figure.1.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}finding $\mu $}{5}{subsection.1.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}Results}{5}{subsection.1.4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.1}parameters}{5}{subsubsection.1.4.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5}Changing epsilon termination}{5}{subsection.1.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.9}{\ignorespaces Computation time for different values of $k$. The growing lines represent computations of models with phase-type distributions. For about $k>200$, GSMP implementation starts outperforming all phase-typed computations, despite the GSMP implementation being relatively poorly optimized.}}{6}{figure.1.9}}
\newlabel{fig:time1}{{1.9}{6}{Computation time for different values of $k$. The growing lines represent computations of models with phase-type distributions. For about $k>200$, GSMP implementation starts outperforming all phase-typed computations, despite the GSMP implementation being relatively poorly optimized}{figure.1.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.10}{\ignorespaces Size of model for different values of $k$. $\#\{$state$\} = nk+1$}}{7}{figure.1.10}}
\newlabel{fig:time1}{{1.10}{7}{Size of model for different values of $k$. $\#\{$state$\} = nk+1$}{figure.1.10}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.11}{\ignorespaces Distance of result of the SSP computation between the event model and the PTF model using explicit engine, $t=0.1$,$\lambda =1/t$,$\epsilon =10^{-5}$}}{8}{figure.1.11}}
\newlabel{fig:diff_explicit_001}{{1.11}{8}{Distance of result of the SSP computation between the event model and the PTF model using explicit engine, $t=0.1$,$\lambda =1/t$,$\epsilon =10^{-5}$}{figure.1.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.12}{\ignorespaces Euclidean Distance of distribution of the SSP computation between the event model and the PTF model using explicit engine versus the PTF parameter k, $t=0.1$,$\lambda =1/t$,$\epsilon =10^{-5}$}}{9}{figure.1.12}}
\newlabel{fig:dist02_explicit_001}{{1.12}{9}{Euclidean Distance of distribution of the SSP computation between the event model and the PTF model using explicit engine versus the PTF parameter k, $t=0.1$,$\lambda =1/t$,$\epsilon =10^{-5}$}{figure.1.12}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.13}{\ignorespaces SSP versus epsilon termination, $t=1$,$\lambda =1/t$}}{10}{figure.1.13}}
\newlabel{fig:epsilon_event}{{1.13}{10}{SSP versus epsilon termination, $t=1$,$\lambda =1/t$}{figure.1.13}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.14}{\ignorespaces SSP versus epsilon termination, PTF parameter k=50, $t=1$,$\lambda =1/t$}}{11}{figure.1.14}}
\newlabel{fig:epsilon_explicit}{{1.14}{11}{SSP versus epsilon termination, PTF parameter k=50, $t=1$,$\lambda =1/t$}{figure.1.14}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.15}{\ignorespaces SSP versus epsilon termination, PTF parameter k=50, $t=1$,$\lambda =1/t$}}{12}{figure.1.15}}
\newlabel{fig:epsilon_hybrid}{{1.15}{12}{SSP versus epsilon termination, PTF parameter k=50, $t=1$,$\lambda =1/t$}{figure.1.15}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.16}{\ignorespaces Euclidean Distance of distribution of the SSP computation between the event model and the PTF model using hybrid engine versus the PTF parameter k, $t=0.02$,median $\lambda $,$\epsilon =10^{-6}$}}{13}{figure.1.16}}
\newlabel{fig:dist_hybrid_50k}{{1.16}{13}{Euclidean Distance of distribution of the SSP computation between the event model and the PTF model using hybrid engine versus the PTF parameter k, $t=0.02$,median $\lambda $,$\epsilon =10^{-6}$}{figure.1.16}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}What has changed ?}{14}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Changes}{14}{subsection.2.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces D/M/1/n queue with capacity $n$.Old Event model.}}{14}{figure.2.1}}
\newlabel{fig:Queue_old}{{2.1}{14}{D/M/1/n queue with capacity $n$.Old Event model}{figure.2.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces Old Phase Type Model, Production isn't enabled in full queue}}{15}{figure.2.2}}
\newlabel{fig:queue_new}{{2.2}{15}{Old Phase Type Model, Production isn't enabled in full queue}{figure.2.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces D/M/1/n queue with capacity $n$. New event Model.}}{16}{figure.2.3}}
\newlabel{fig:event_Queue_new}{{2.3}{16}{D/M/1/n queue with capacity $n$. New event Model}{figure.2.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.4}{\ignorespaces New Phase type Model}}{16}{figure.2.4}}
\newlabel{fig:queue_new}{{2.4}{16}{New Phase type Model}{figure.2.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.5}{\ignorespaces Infinite Distance of distribution of the SSP computation between the event model and the PTF model using hybrid engine versus the PTF parameter k,$t=0.1$,median $\lambda $,$\epsilon =10^{-5}$}}{17}{figure.2.5}}
\newlabel{fig:dist_const_1E-5}{{2.5}{17}{Infinite Distance of distribution of the SSP computation between the event model and the PTF model using hybrid engine versus the PTF parameter k,$t=0.1$,median $\lambda $,$\epsilon =10^{-5}$}{figure.2.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Result}{17}{subsection.2.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.6}{\ignorespaces Infinite Distance of distribution of the SSP computation between the event model and the PTF model using hybrid engine versus the PTF parameter k,$t=1$,median $\lambda $,$\epsilon =10^{-5}$}}{18}{figure.2.6}}
\newlabel{fig:dist_epsilon_1E-13}{{2.6}{18}{Infinite Distance of distribution of the SSP computation between the event model and the PTF model using hybrid engine versus the PTF parameter k,$t=1$,median $\lambda $,$\epsilon =10^{-5}$}{figure.2.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}epsilon termination}{19}{subsection.2.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.7}{\ignorespaces Absolute Difference between SSP of event model and of SSP PTF model using explicit engine versus state of queue,$t=1$,median $\lambda $,$\epsilon =10^{-5}$}}{20}{figure.2.7}}
\newlabel{fig:dist_dynamic_explicit}{{2.7}{20}{Absolute Difference between SSP of event model and of SSP PTF model using explicit engine versus state of queue,$t=1$,median $\lambda $,$\epsilon =10^{-5}$}{figure.2.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}epsilon termination}{20}{subsection.2.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}more data}{20}{subsection.2.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.8}{\ignorespaces Absolute Difference between SSP of event model and of SSP PTF model using hybrid engine versus state of queue,$t=1$,median $\lambda $,$\epsilon =10^{-5}$}}{21}{figure.2.8}}
\newlabel{fig:dist_dynamic_hybrid}{{2.8}{21}{Absolute Difference between SSP of event model and of SSP PTF model using hybrid engine versus state of queue,$t=1$,median $\lambda $,$\epsilon =10^{-5}$}{figure.2.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.9}{\ignorespaces infinity norm distance between SSP of event model with 1E-10 epsilon termination and SSP of event model and PTH model using hybrid and explicit,$t=1$,median $\lambda $,$\epsilon =10^{-5}$}}{22}{figure.2.9}}
\newlabel{fig:dist_versus_k}{{2.9}{22}{infinity norm distance between SSP of event model with 1E-10 epsilon termination and SSP of event model and PTH model using hybrid and explicit,$t=1$,median $\lambda $,$\epsilon =10^{-5}$}{figure.2.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.10}{\ignorespaces Computation time for different values of $k$. For about $k>200$, GSMP implementation starts outperforming all phase-typed computations, despite the GSMP implementation being relatively poorly optimized.}}{23}{figure.2.10}}
\newlabel{fig:performance}{{2.10}{23}{Computation time for different values of $k$. For about $k>200$, GSMP implementation starts outperforming all phase-typed computations, despite the GSMP implementation being relatively poorly optimized}{figure.2.10}{}}
